<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="setup" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\setup.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="setup_icon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\setup_icon.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="UIBanner" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\UIBanner.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="UIDialog" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\UIDialog.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="error" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\error.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="DownloadInfoFormat" xml:space="preserve">
    <value>Downloaded {0} bytes of {1} bytes</value>
  </data>
  <data name="DownloadingPlatformToolsMessage" xml:space="preserve">
    <value>Downloading the Platform Tools...</value>
  </data>
  <data name="DownloadingSdkToolsMessage" xml:space="preserve">
    <value>Downloading the SDK Tools...</value>
  </data>
  <data name="DownloadPrepMessage" xml:space="preserve">
    <value>Preparing to download tools...</value>
  </data>
  <data name="ExtractingFileFormat" xml:space="preserve">
    <value>Extracting {0}...</value>
  </data>
  <data name="ExtractingPlatformToolsMessage" xml:space="preserve">
    <value>Extracting Platform Tools...</value>
  </data>
  <data name="ExtractingSdkToolsMessage" xml:space="preserve">
    <value>Extracting SDK Tools...</value>
  </data>
  <data name="GetRepositoryMesage" xml:space="preserve">
    <value>Getting Repository...</value>
  </data>
  <data name="PlatformArchiveXPath" xml:space="preserve">
    <value>sdk:platform/sdk:version[text()='{0}']/../sdk:revision[text()='{1}']/../sdk:archives/sdk:archive[@os='windows']</value>
  </data>
  <data name="PlatformUrlNotFoundMessage" xml:space="preserve">
    <value>Unable to locate platform tools url</value>
  </data>
  <data name="PrepSdkPathMessage" xml:space="preserve">
    <value>Preparing SDK Directory...</value>
  </data>
  <data name="ProxyExceptionMessage" xml:space="preserve">
    <value>(407) Proxy Authentication Required</value>
  </data>
  <data name="RegistryAccessExceptionMessage" xml:space="preserve">
    <value>Unable to write sdk path to registry</value>
  </data>
  <data name="SdkUrlNotFoundMessage" xml:space="preserve">
    <value>Unable to locate sdk tools url</value>
  </data>
  <data name="security_background" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\security_background.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="SettingupSdkPathMessage" xml:space="preserve">
    <value>Setting up SDK Path...</value>
  </data>
  <data name="ToolsArchiveXPath" xml:space="preserve">
    <value>sdk:tool/sdk:revision[text()='{0}']/../sdk:archives/sdk:archive[@os='windows']</value>
  </data>
  <data name="user" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\user.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="UserAgent" xml:space="preserve">
    <value>Droid Explorer Bootstrapper ({0})</value>
  </data>
  <data name="NoRegistryInstallPathMessage" xml:space="preserve">
    <value>Unable to locate install path registry key</value>
  </data>
  <data name="AndroidSdkEULA" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\AndroidSdkEULA.txt;System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="InstallStartMessage" xml:space="preserve">
    <value>The Setup Wizard will install all the necessary components to get Droid Explorer running on your computer. Click Next to continue or Cancel to exit the Setup Wizard.</value>
  </data>
  <data name="UninstallStartMessage" xml:space="preserve">
    <value>The Setup Wizard will remove all the previously installed components to completely uninstall Droid Explorer from your system. Click the Next button to continue, or the Cancel button to exit.</value>
  </data>
  <data name="InstallFinishedMessage" xml:space="preserve">
    <value>Install of Droid Explorer is now complete. Click the Finish button below to exit the Setup Wizard.</value>
  </data>
  <data name="InstallFinishedTitle" xml:space="preserve">
    <value>Installation Completed Successfully</value>
  </data>
  <data name="UninstallFinishedTitle" xml:space="preserve">
    <value>Removal Completed Successfully</value>
  </data>
  <data name="UninstallFinshedMessage" xml:space="preserve">
    <value>Uninstall of Droid Explorer is now complete. Click the Finish button below to exit the Setup Wizard.</value>
  </data>
  <data name="BrowseText" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="DownloadSDKMessage" xml:space="preserve">
    <value>Download the Android SDK</value>
  </data>
  <data name="NotSDKPathMessage" xml:space="preserve">
    <value>Unable to identify the specified path as a valid Android SDK directory</value>
  </data>
  <data name="NotSDKPathTitle" xml:space="preserve">
    <value>Android SDK Invalid</value>
  </data>
  <data name="SDKPathText" xml:space="preserve">
    <value>Android SDK Path:</value>
  </data>
  <data name="SelectSDKInfoMessage" xml:space="preserve">
    <value>Select Android SDK directory for Droid Explorer to use.</value>
  </data>
  <data name="SelectSDKRootTitle" xml:space="preserve">
    <value>Select Android SDK root</value>
  </data>
  <data name="SetUpSDKMessage" xml:space="preserve">
    <value>Set up Android SDK for me</value>
  </data>
</root>
